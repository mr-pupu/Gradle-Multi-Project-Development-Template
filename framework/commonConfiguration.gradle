// Spring Boot plugin applies Java plugin on root project. That's why there's
// no Java plugin in root project.
//
// @see https://github.com/spring-projects/spring-boot/blob/master/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/SpringBootPlugin.java
apply plugin: 'spring-boot'

ext {
    mainClassName = 'com.github.vkuzel.gradle_multi_project_development_template.framework.core_module.CoreModuleApplication'
}

repositories {
    mavenCentral()
}

// "The standard project dependencies are supported and makes relevant projects
// configured. If project A has a compile dependency on project B then building
// A causes configuration of both projects." That's why dependency on Spring
// Boot and Dependency Management plugins has been applied in the root
// project's build script (in it's buildscript block).
//
// @see https://docs.gradle.org/current/userguide/multi_project_builds.html#sec:configuration_on_demand
subprojects {
    // Subprojects must not have applied Spring Boot plugin because it
    // duplicates some tasks. So dependency management to Spring Boot project
    // is extracted here.
    apply plugin: "io.spring.dependency-management"
    apply plugin: "java"

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            // Spring Boot version is defined in buildscript block of the root
            // project's build.gradle file.
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
        }
    }
}
